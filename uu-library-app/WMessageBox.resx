<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAABF1JREFUWEfF
        l3tMW1Ucx+fbGB9/mJgYH3/4iDEx8Q+jfyqJpaWjtBTW4jJGyXTTObfgtsTFONNEsC2lr9tuvNwGQVDG
        HsZFWOIYm4P2tr23LX1QHAM2NqGv0e4Bo0A5noOHKe5YbjvUT/L9o7253++555z7+527hgsFSuYRQRXz
        NE/lfIFf6XhOrOl9DF/69xBVWp+Rmpw6GcWeL6t1R7Y1+SI724KTnzT7Y+UNnojMyIzJKaaZX9X3Gr5l
        dUBPuw4al9W7Ix3O6NxgdA6MJhbu0IWrKdDlTyxsPeSNyCimB80Qtsie3Gr6ZbmZGWm1hWdIof+kk4HE
        wvp97MTaGmcutsocYXXfi3IzO24dnSKGrCR/eBYo6j1X8w1OHrbkjlIJ7l1nYrxnhm4skMy5yjuRBHIT
        O85TM09ga26I9XaFtvPiNZJppjrCxGZLKKYRW3OjxMz60OhJhplqBGq9hZ2QKQMPYvv0CKnOhzbWuiIk
        s2y199hQVKCxvoUj0iNQWV/a2RoIk4yyVd3py7cEapscR6QnT9P7yq624P83gBxlz6OKOs+qDuDL4xks
        AQK+/4HV2oTD8RQooVwpicE5Vmhg2gRqWiI7fPg+HEWmUOcoV/00miAZZqo2RwR82j4K9jvmQNWpBNj6
        7fCkWM+M5Vc7N+G4O0GFCNZz3+nz1++6EJXW9gMzPQvqmNRtUXQSbG4eihfqmW6hkn4cxy5HqKGflVNs
        BJVUkvlKQvdt+sYHKn9OLAv/q/Z2RuclBsZLbOeoz5fXe8KokJAC0qlrIAHKG33gqzThS/r8RChZoGNO
        4Ng/gRvxSJc/fnsJrCNToB2upy9EnpE/2nEcbG8ZAFuaBoGxb4YYSFLZgWBMpLXl4GhYC2ocb25r8sdQ
        6MFzvyXhTITeM7PdxSa2csM+1qeoc4c/PuRP7W7/FVS0DoLNB/2gtM4Ldnw3AqrP3CCGpJP27E0gNbJn
        F8NRzRZp6X6p3hGGTaRHanTs4Gv7nlq8iBGo7a+XNQ7EdOemgaH3FrDYl2+ybCQ1usIrvp5LCFR0cUXH
        2BTJKFttaAiEeOre53FEevLUdOnuY1eSJKNspTgQDPM0tldxRHqE1dZ3PmoZniQZZSuZpT/M+eCCikcR
        5Q6RjLKRBRYqWKaHsT03Co3sycpTiQWSYaaCyzkl0jNfYGtuoENrkckd3e+YJ5pylaF3Gkhgb4Bd+GFs
        zZ0CnbNiY8PAZLaDQFMvozxRVHewZebA0e+RW/rjevgkpJB0Qh0S9gL4+mV4av47a2scb4sNzOXt31+8
        TtmSxLAloaqHgpd+7/kxNCOuYYzYKnveqGceyNfa34e9Plhsdoc/bLkwuevolZnPfgiBio5L0x80D8WK
        TK4Jqcn1i8TAXtoCf6u6r8HBzINiyh1Bewpb3T1oSvNUthy+xlqYp7LK+Bo6F320LpVadN5A/8E36bhY
        7xwX6Zw3hVq7dQ0A9ywa/Ne8+7X9SfSpn6Psuf93FoR05iq0B6oAAAAASUVORK5CYII=
</value>
  </data>
</root>